http://www.independent-software.com/writing-your-own-bootloader-for-a-toy-operating-system-2/

Запись символа в буфер клавиатуры
Вывод на монитор записанного символа
Вывод на монитор символа

os:
https://xakep.ru/2005/11/17/28794/
http://www.brokenthorn.com/Resources/OSDevIndex.html
https://littleosbook.github.io/
http://subscribe.ru/catalog/comp.soft.myosdev?pos=3
http://subscribe.ru/catalog/comp.soft.prog.asmos?pos=2
https://dev64.wordpress.com/2012/01/09/experimenting-with-os-kernel-load-using-menuet-os-boot-loader/

начальный загрузчик:
http://rus-linux.net/MyLDP/algol/asm/asmschool_getting_down_to_the_bare_metal.html
 gas:
 http://www.codeproject.com/Articles/664165/Writing-a-boot-loader-in-Assembly-and-C-Part
http://programmersforum.ru/showthread.php?t=25012 (похожа на xakep.ru)
https://www.reinterpretcast.com/creating-a-bare-bones-bootloader

bios:
http://mini-soft.ru/document/assembler-ibm-pc-8
http://www.frolov-lib.ru/books/bsp/v02/ch2_4.htm

mov	$0x86,	%ah #задержка
mov	$0x10,	%cx #1секунда (1000 мс)
int	$0x15

mov	$0x10,	%ah # чтение расширенного сивола из дампа клавиатуры
int	$0x16
cmp	$0x02,	%ah # 02 скан-код единицы 03 два 1с <enter>

mov	$0x13,	%ah #запись строки в режиме телетайпа
int	$0x16

mov	$0x0e,	%ah #запись символа в режиме телетайпа
int	$0x10

(intel syntax)
    in     al, 92h #открыть вентиль А20
    or     al, 02h
    out    92h, al

    in     al, 92h #закрыть вентиль А20
    and    al, 0FDh
    out    92h, al


export EDITOR="vim"
mkcd() {
        mkdir -p $1
        cd $_
}

qemu-img conver -f raw floppy.img -O qcow2 floppy.qcow2 -p
dd if=boot.bin of=floppy.img bs=512 count=1 conv=notrunc

qemu-system-i386 -boot \
menu=on,splash=/home/nez/Downloads/boot.bmp,splash-time=5000 -fda floppy.img
